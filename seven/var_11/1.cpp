#include <iostream>     // библиотека ввода-вывода C++
#include <time.h>       // библиотека, дающая доступ к системному времени

using namespace std;

int main() {

    /* srand даёт функции rand() случайное число. time(0) возвращает
    текущее время в стандарте времени Unix (Epoch time). Этот стандарт 
    работает таким образом, что записанное в нем время - уникальное число, 
    которое очень быстро меняется.*/
    srand(time(0));

    /* здесь объявляется размер массива. Несмотря на то, что число равно 10,
    последний элемент массива будет находиться в ячейке под номером 9, т.к.
    отсчет элементов массива начинается с 0. Слово const означает, что эту 
    переменную нельзя изменить в дальнейшем коде программы. Принято называть
    такие переменные большими буквами (uppercase) */
    const int SIZE = 10;

    /* объявление массива. Объявление =/= инициализация. На этой строке прописано,
    что в программе с этого момента будет массив с количеством элементов, равным SIZE,
    и все элементы этого массива - числа с плавающей точкой (float) */
    float arr[SIZE];

    /* цикл while (переводится как "пока" - "пока выполняется условие в скобках, выполнить
    это { ... }"). В данном случае цикл бесконечный - условие всегда равно 1.
    Еще это можно записать как while (true), потому что слово true в языке C равно 1 */
    while (1) {
        
        // переменная input будет содержать один символ, который введёт пользователь
        char input;
        // запрашиваем у пользователя один символ (r или m)
        cout << "Инициализация: случайная(r) или вручную(m)? ";
        /* cin подождет, пока пользователь что-нибудь введет и нажмет Enter,
        и затем запишет всё это в переменную input, которую мы объявили ранее */
        cin >> input;

        // теперь смотрим, что же ввёл пользователь
        if (input == 'm') {                                     // если ввод = 'm'
            // инициализация массива начинается здесь
            for (int i = 0; i < SIZE; i++) {                    // запускаем цикл с предусловием, который будет повторяться SIZE раз
                cout << "Введите " << i << " элемент массива: ";// i соответствует ячейке массива, меняется с каждой итерацией цикла
                cin >> arr[i];                                  // пользователь что-то ввел, нажал Enter, и cin сохранит этот ввод в ячейке i
                /* этот цикл повторится для каждой ячейки массива arr, начиная с 0 и заканчивая SIZE.
                Когда значение i будет равно SIZE, цикл прекратится. Так как условный оператор if
                выполнил свою работу, else if и else не проверяются, и программа переходит дальше */
            }
        } else if (input == 'r') {                              // если ввод = 'r'
            // инициализация массива начинается здесь
            for (int i = 0; i < SIZE; i++) {                    // точно такой же цикл с предусловием
                arr[i] = (float(rand())/float(RAND_MAX)) * 6.9; // в каждую ячейку массива запихиваем случайное число с плавающей точкой
                /* вот эта формула по нахождению случайного числа взята с потолка. Я просто
                делил случайные выводы rand() друг на друга и умножал их на что попало, пока
                не получилось какое-то устраивающее меня число */
            }
        } else {                                                // если пользователь не ввел ни 'm', ни 'r'
            continue;                                           // тогда перезапускаем цикл while (1), и снова просим ввести 'm' или 'r' и т.д.
        }
        break;                                                  // ну а если одно из условий выполнилось, то выходим из цикла while (1)
    }

    // теперь выводим содержимое arr[]
    cout << "\n" << "Массив arr:" << "\n";                      // \n - перейти на новую линию, чтобы не загромождать вывод кучей текста
    for (int i = 0; i < SIZE; i++) {                            // ещё один такой же цикл с предусловием
        printf("arr[%d] = %.3f\n", i, arr[i]);                  // теперь выводим на экран конструкцию вида: arr[x] = x.xxx десять раз
    }
}
